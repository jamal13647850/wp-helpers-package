<?php
declare(strict_types=1);

/*
Sayyed Jamal Ghasemi — Full-Stack Developer
📧 info@jamalghasemi.com
🔗 LinkedIn: https://www.linkedin.com/in/jamal1364/
📸 Instagram: https://www.instagram.com/jamal13647850
💬 Telegram: https://t.me/jamal13647850
🌐 https://jamalghasemi.com
*/

namespace jamal13647850\wphelpers\Components\Menu\Variants;

use jamal13647850\wphelpers\Components\Menu\AbstractMenu;
use jamal13647850\wphelpers\Navigation\SimpleWalker;

/**
 * Class SimpleMenu
 *
 * A minimal WordPress menu variant that renders a flat (non-nested) navigation
 * using the {@see SimpleWalker} for link-specific styling.
 *
 * Behavior:
 * - Merges caller options with sensible defaults.
 * - Instantiates SimpleWalker with variant options + caller walker options.
 * - Builds wp_nav_menu() args and returns the generated HTML (string) by default.
 *
 * Notes:
 * - UI strings remain Persian (fa-IR) per request.
 * - If 'echo' is set to true in options, wp_nav_menu() will print directly;
 *   however this method still returns wp_nav_menu()'s return value.
 *
 * @package jamal13647850\wphelpers\Components\Menu\Variants
 */
final class SimpleMenu extends AbstractMenu
{
    /**
     * Default options for the simple menu variant.
     *
     * Keys:
     * - menu_id (string): <ul> id attribute.
     * - menu_class (string): classes for the <ul>.
     * - aria_label (string): localized aria-label for the <ul> (Persian).
     * - items_wrap (string): format string used by wp_nav_menu().
     *   Must include %1$s (id), %2$s (class), and %3$s (items).
     *   This template also contains an extra `%s` placeholder reserved for the
     *   aria-label that is injected via sprintf() before passing to wp_nav_menu().
     * - echo (bool): whether wp_nav_menu() echoes directly.
     * - fallback_cb (bool|callable): fallback callback for wp_nav_menu().
     * - simple_link_class (string): link classes passed to SimpleWalker.
     *
     * @return array<string, mixed>
     */
    protected static function defaultOptions(): array
    {
        return [
            'menu_id'           => 'top-menu',
            'menu_class'        => 'flex items-center space-x-1 sm:space-x-2 lg:space-x-4',
            'aria_label'        => 'ناوبری بالایی',
            'items_wrap'        => '<ul id="%1$s" class="%2$s" aria-label="%s">%3$s</ul>',
            'echo'              => false,
            'fallback_cb'       => false,
            // SimpleWalker-specific configuration
            'simple_link_class' => 'text-secondary hover:text-primary transition-colors text-nowrap',
        ];
    }

    /**
     * Render the simple menu for a given theme location.
     *
     * Preconditions:
     * - The $themeLocation must correspond to a registered WordPress menu location.
     *
     * Side Effects:
     * - If 'echo' is true in options, output is printed by wp_nav_menu().
     *
     * @param string               $themeLocation  WordPress theme location slug (e.g., 'primary').
     * @param array<string, mixed> $options        Optional menu options to override defaults.
     * @param array<string, mixed> $walkerOptions  Optional SimpleWalker options to override variant options.
     *
     * @return string HTML markup generated by wp_nav_menu().
     *
     * @example
     * $menu = new \jamal13647850\wphelpers\Components\Menu\Variants\SimpleMenu();
     * echo $menu->render('primary', [
     *     'menu_id'    => 'main-nav',
     *     'menu_class' => 'flex gap-4',
     *     'echo'       => false,
     * ], [
     *     // Walker overrides
     *     'simple_link_class' => 'text-gray-700 hover:text-black',
     * ]);
     */
    public function render(
        string $themeLocation,
        array $options = [],
        array $walkerOptions = []
    ): string {
        $opts = $this->makeOptions($options);

        // Variant options consumed by SimpleWalker
        $walkerVariantOptions = [
            'simple_link_class' => (string) $opts->get('simple_link_class'),
        ];

        $args = [
            'theme_location' => $themeLocation,
            'menu_id'        => (string) $opts->get('menu_id'),
            'menu_class'     => (string) $opts->get('menu_class'),
            'container'      => false,
            'fallback_cb'    => (bool) $opts->get('fallback_cb'),
            'echo'           => (bool) $opts->get('echo'),
        ];

        // Use the specialized SimpleWalker
        $args['walker'] = new SimpleWalker(
            array_merge($walkerVariantOptions, $walkerOptions)
        );

        // Inject localized aria-label (fa-IR) into items_wrap.
        // The numbered placeholders (%1$s, %2$s, %3$s) are left intact for wp_nav_menu() to fill.
        $args['items_wrap'] = sprintf(
            (string) $opts->get('items_wrap'),
            esc_attr__((string) $opts->get('aria_label'), 'your-theme-textdomain')
        );

        return (string) wp_nav_menu($args);
    }
}
